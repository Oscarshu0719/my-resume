---
name: Tzu-Chun Hsu
tel: +886901166526 (Taiwan), +8618868111514 (China)
email: vm3y3rmp40719@gmail.com
github_link: https://github.com/Oscarshu0719
github: Oscarshu0719
education:
- school: Zhejiang University
  degree: B.S. in Computer Science
  where: Hangzhou, Zhejiang, China
  when: Sep.2016 - Jun.2020 (Expected)
awards:
- title: "First Prize"
  subtitle: "CCCC-Mobile Application Innovation Contest"
  where: "Hangzhou, Zhejiang, China"
  when: "Sep.2018"
- title: "Gold Medal Award"
  subtitle: "The 4th China College Students' \"Internet+\" Innovation and Entrepreneurship Competition"
  where: "Hangzhou, Zhejiang, China"
  when: "Sep.2018"
- title: "Excellent"
  subtitle: "College Students' Innovative Entrepreneurial Training Plan Program"
  where: "Hangzhou, Zhejiang, China"
  when: "Apr.2018 - May.2019"
- title: "Third Prize"
  subtitle: "Hong Kong, Macau, and Taiwan student scholarship"
  where: "Hangzhou, Zhejiang, China"
  when: "Sep.2018"
- title: "Second Prize"
  subtitle: "Hong Kong, Macau, and Taiwan student scholarship"
  where: "Hangzhou, Zhejiang, China"
  when: "Dec.2019"
experiences:
- title: "College Students' Innovative Entrepreneurial Training Plan Program"
  subtitle: "Zhejiang University"
  list:
  - "Our team implemented Variational autoencoder (VAE) and Generative Adversarial Network (GAN) as an automatic music composition system by PyTorch, and the output is a piece of coherent symbolic polyphonic (MIDI) music."
  - "First, Input training data to Encoder and it generates latent vectors. Second, Input the latent vectors to Generator to generate a piece of music. Finally, input the generated music to Discriminator to train."
  - "Improve VAE on our own so that the new VAE can be easier to extract chords. Additionally, we also use WGAN-GP (Improved Training of Wasserstein GANs) to solve the classic problems of GAN, like mode collapse problem, vanishing gradient problem, and bad results of some audio tracks."
  - "We implemented an Optical Character Recognition (OCR) application by Convolutional Neural Network (CNN) with Keras, and it's used to recognize music notes from input images."
  - "In this project, I implemented the relative functions of the Discriminator in WGAN-GP and most parts of the OCR."
  where: "Hangzhou, Zhejiang, China"
  when: "Apr.2018 - May.2019"
- title: "The University of British Columbia (UBC) Vancouver Summer Program (VSP)"
  subtitle: "The University of British Columbia (UBC)"
  list: 
  - "The Vancouver Summer Program (VSP) is an intensive four-week academic program for two courses."
  - "The two courses are 'Algorithms and the World Wide Web' and 'Building Modern Web Applications', each consisted of 39 contact hours. Both courses were taught by UBC faculty."
  - "I enjoyed the process of collaborating with my teammates to complete our projects, and experienced the active study atmosphere in UBC."
  where: "Vancouver, British Columbia, Canada"
  when: "Jul.2019 - Aug.2019"
projects:
- title: 'miniSQL'
  content: 'Teamwork. Our team implemented a simple Structured Query Language (SQL). In this project, I implemented the storage part by B+ tree by Java.'
  when: 'Jun.2018'
- title: 'Homework management system'
  content: 'Individual work. I implemented a simple homework management system by Linux Bash.'
  when: 'Aug.2018'
- title: '3D reconstruction'
  content: 'Individual work. I implemented 3D reconstruction using traditional theories by Matlab, like using theories about fundamental matrix and essential matrix.'
  when: 'May.2019'
- title: 'Lines of Action'
  content: 'Individual work. I implemented Lines of Action (LOA) game by Python, and used Monte Carlo Tree Search (MCTS) to be the algorithm of the opponent. Additionally, I used PyQt to implement its GUI.'
  when: 'Jun.2019'
- title: 'C-minus compiler'
  content: 'Teamwork. Our team implemented a simple C-like language. The steps include lexical analysis, syntactic analysis, intermediate code generation, optimization, and target code generation. The intermediate code is described by three address code and saves as quadruple. The target code is x86 assembly language. In this project, I implemented intermediate code generation, optimization, and target code generation by Java.'
  when: 'Jun.2019'
- title: 'Stock trading system'
  content: 'Teamwork. Our team implemented a stock trading system of B/S architecture by NodeJS, Python and MySQL. In this project, I implemented database operations of funds account by Python and its package, Flask.'
  when: 'Jun.2019'
- title: 'Security alarm map'
  content: 'Teamwork. Our team implemented a Android application, and Android is used for front-end and Python is used for back-end. I participated in part of work of front-end and implemented all APIs of back-end by Flask.'
  when: 'Nov.2019'
skills:
- Python, C, Java, Matlab, Android, JavaScript, Bash, SQL
- Qt, OpenCV, Keras, PyTorch
- LaTeX, Git
...


